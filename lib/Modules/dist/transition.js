// Generated by CoffeeScript 2.0.0-beta4
var TocasTransition;

TocasTransition = (function() {
  class TocasTransition {
    _init({$this}) {
      // 初始化動畫佇列。
      $this.data('animationQueue', []);
      // 初始化動畫索引。
      return $this.data('animationIndex', 0);
    }

    // 播放動畫。
    async _animate({$this, $delay, $module}, {animation, duration, onComplete, group, interval}) {
      var index, looping, queue;
      switch (animation) {
        case 'show':
          $this.removeAttr('data-animating-hidden');
          // 過了動畫的執行時間（相當於動畫執行完畢），我們才繼續。
          await $delay(duration);
          break;
        case 'hide':
          $this.attr('data-animating-hidden', 'true');
          // 過了動畫的執行時間（相當於動畫執行完畢），我們才繼續。
          await $delay(duration);
          break;
        case 'toggle':
          if ($this.attr('data-animating-hidden') === 'true') {
            $this.removeAttr('data-animating-hidden');
          } else {
            $this.attr('data-animating-hidden', 'true');
          }
          // 過了動畫的執行時間（相當於動畫執行完畢），我們才繼續。
          await $delay(duration);
          break;
        case 'delay':
          // 過了動畫的執行時間（相當於動畫執行完畢），我們才繼續。
          await $delay(duration);
          break;
        default:
          // 設置動畫時間。
          $this.css('animation-duration', `${duration}ms`);
          // 設置動畫名稱。
          $this.attr('data-animation', animation);
          await $delay();
          // 執行動畫。
          $this.attr('data-animating', true);
          // 過了動畫的執行時間（相當於動畫執行完畢），我們才繼續。
          await $delay(duration);
          
          if (animation.indexOf('in') !== -1) {
            if ($this.attr('data-animating-hidden') === 'true') {
              $this.removeAttr('data-animating-hidden');
            }
          }
          if (animation.indexOf('out') !== -1) {
            $this.attr('data-animating-hidden', 'true');
          }
          // 移除動畫效果樣式。
          $this.removeAttr('data-animating');
      }
      // 呼叫完成函式。
      onComplete.call($this.get());
      // 取得動畫佇列。
      queue = $this.data('animationQueue');
      // 取得目前播放的索引。
      index = $this.data('animationIndex');
      // 確認是否為無限重複的動畫。
      looping = $this.data('animationLooping');
      index++;
      // 如果沒有下一個動畫了，就表示這是最後一個。
      // 我們就把動畫佇列清空。
      if (queue[index] === void 0) {
        index = 0;
        $this.removeAttr('data-animation').removeAttr('data-animating').css('animation-duration', '').data('animationIndex', index);
        // 如果不需要重複的話，就將佇列清空。
        if (!looping) {
          queue = [];
          $this.data('animationQueue', queue);
          return;
        }
      }
      // 設置新的索引。
      $this.data('animationIndex', index);
      // 執行下一個動畫。
      return $module.prototype._animate({$this, $delay, $module}, queue[index]);
    }

    // 將新的動畫推入佇列中，如果佇列裡只有這個動畫就立即執行。
    _push({$this, $delay, $module}, animation, duration, onComplete) {
      var data, queue;
      // 如果元素還沒初始化的話，就先初始化。
      if ($this.data('animationQueue') === void 0) {
        $module.prototype._init({$this});
      }
      // 準備好本次的動畫資料。
      if (typeof duration === 'function') {
        onComplete = duration;
        duration = 800;
      }
      if (duration === null) {
        duration = 800;
      }
      if (onComplete === null || onComplete === void 0) {
        onComplete = function() {};
      }
      data = {animation, duration, onComplete};
      // 將本次動畫資料擺入至佇列中。
      queue = $this.data('animationQueue');
      queue.push(data);
      // 如果佇列裡只有一個動畫，那麼就是剛才所新增的，直接開始執行。
      if (queue.length === 1) {
        return $module.prototype._animate({$this, $delay, $module}, data);
      }
    }

    $opts({$elements, $index, $this, $delay, $module}, options) {
      $module.prototype._execute({$elements, $index, $this, $delay, $module}, options);
      return ts.fn;
    }

    _execute({$elements, $index, $this, $delay, $module}, options) {
      var $self, element, elements, i, index, len, results;
      if ($index !== 0 && (options.reverse != null) && options.reverse === true) {
        return ts.fn;
      }
      switch (options.animation) {
        case 'hide':
        case 'toggle':
        case 'show':
          if (options.interval === void 0) {
            options.interval = 0;
          }
          if (options.duration === null) {
            options.duration = 0;
          }
      }
      options = Object.assign({
        animation: '',
        duration: null,
        interval: 100,
        reverse: false,
        group: false,
        onComplete: function() {},
        onAllComplete: function() {}
      }, options);
      if (options.reverse === true) {
        elements = $elements.toArray().reverse();
        results = [];
        for (index = i = 0, len = elements.length; i < len; index = ++i) {
          element = elements[index];
          $self = $selector(element);
          results.push((async function($self) {
            await $delay(options.interval * index);
            return $module.prototype._push({
              $this: $self,
              $delay,
              $module
            }, options.animation, options.duration, options.onComplete);
          })($self));
        }
        return results;
      } else {
        return (async function() {
          await $delay(options.interval * $index);
          return $module.prototype._push({$this, $delay, $module}, options.animation, options.duration, options.onComplete);
        })();
      }
    }

  };

  TocasTransition.prototype.$name = 'transition';

  TocasTransition.prototype.$methods = {
    'bounce': function({$elements, $index, $this, $delay, $module}, duration, onComplete) {
      $module.prototype._execute({$elements, $index, $this, $delay, $module}, {
        animation: 'bounce',
        duration,
        onComplete
      });
      return ts.fn;
    },
    'flash': function({$elements, $index, $this, $delay, $module}, duration, onComplete) {
      $module.prototype._execute({$elements, $index, $this, $delay, $module}, {
        animation: 'flash',
        duration,
        onComplete
      });
      return ts.fn;
    },
    'pulse': function({$elements, $index, $this, $delay, $module}, duration, onComplete) {
      $module.prototype._execute({$elements, $index, $this, $delay, $module}, {
        animation: 'pulse',
        duration,
        onComplete
      });
      return ts.fn;
    },
    'rubber band': function({$elements, $index, $this, $delay, $module}, duration, onComplete) {
      $module.prototype._execute({$elements, $index, $this, $delay, $module}, {
        animation: 'rubber band',
        duration,
        onComplete
      });
      return ts.fn;
    },
    'shake': function({$elements, $index, $this, $delay, $module}, duration, onComplete) {
      $module.prototype._execute({$elements, $index, $this, $delay, $module}, {
        animation: 'shake',
        duration,
        onComplete
      });
      return ts.fn;
    },
    'head shake': function({$elements, $index, $this, $delay, $module}, duration, onComplete) {
      $module.prototype._execute({$elements, $index, $this, $delay, $module}, {
        animation: 'head shake',
        duration,
        onComplete
      });
      return ts.fn;
    },
    'swing': function({$elements, $index, $this, $delay, $module}, duration, onComplete) {
      $module.prototype._execute({$elements, $index, $this, $delay, $module}, {
        animation: 'swing',
        duration,
        onComplete
      });
      return ts.fn;
    },
    'tada': function({$elements, $index, $this, $delay, $module}, duration, onComplete) {
      $module.prototype._execute({$elements, $index, $this, $delay, $module}, {
        animation: 'tada',
        duration,
        onComplete
      });
      return ts.fn;
    },
    'wobble': function({$elements, $index, $this, $delay, $module}, duration, onComplete) {
      $module.prototype._execute({$elements, $index, $this, $delay, $module}, {
        animation: 'wobble',
        duration,
        onComplete
      });
      return ts.fn;
    },
    'jello': function({$elements, $index, $this, $delay, $module}, duration, onComplete) {
      $module.prototype._execute({$elements, $index, $this, $delay, $module}, {
        animation: 'jello',
        duration,
        onComplete
      });
      return ts.fn;
    },
    'bounce in': function({$elements, $index, $this, $delay, $module}, duration, onComplete) {
      $module.prototype._execute({$elements, $index, $this, $delay, $module}, {
        animation: 'bounce in',
        duration,
        onComplete
      });
      return ts.fn;
    },
    'bounce in down': function({$elements, $index, $this, $delay, $module}, duration, onComplete) {
      $module.prototype._execute({$elements, $index, $this, $delay, $module}, {
        animation: 'bounce in down',
        duration,
        onComplete
      });
      return ts.fn;
    },
    'bounce in left': function({$elements, $index, $this, $delay, $module}, duration, onComplete) {
      $module.prototype._execute({$elements, $index, $this, $delay, $module}, {
        animation: 'bounce in left',
        duration,
        onComplete
      });
      return ts.fn;
    },
    'bounce in right': function({$elements, $index, $this, $delay, $module}, duration, onComplete) {
      $module.prototype._execute({$elements, $index, $this, $delay, $module}, {
        animation: 'bounce in right',
        duration,
        onComplete
      });
      return ts.fn;
    },
    'bounce in up': function({$elements, $index, $this, $delay, $module}, duration, onComplete) {
      $module.prototype._execute({$elements, $index, $this, $delay, $module}, {
        animation: 'bounce in up',
        duration,
        onComplete
      });
      return ts.fn;
    },
    'bounce out': function({$elements, $index, $this, $delay, $module}, duration, onComplete) {
      $module.prototype._execute({$elements, $index, $this, $delay, $module}, {
        animation: 'bounce out',
        duration,
        onComplete
      });
      return ts.fn;
    },
    'bounce down': function({$elements, $index, $this, $delay, $module}, duration, onComplete) {
      $module.prototype._execute({$elements, $index, $this, $delay, $module}, {
        animation: 'bounce down',
        duration,
        onComplete
      });
      return ts.fn;
    },
    'bounce out left': function({$elements, $index, $this, $delay, $module}, duration, onComplete) {
      $module.prototype._execute({$elements, $index, $this, $delay, $module}, {
        animation: 'bounce out left',
        duration,
        onComplete
      });
      return ts.fn;
    },
    'bounce out right': function({$elements, $index, $this, $delay, $module}, duration, onComplete) {
      $module.prototype._execute({$elements, $index, $this, $delay, $module}, {
        animation: 'bounce out right',
        duration,
        onComplete
      });
      return ts.fn;
    },
    'bounce out up': function({$elements, $index, $this, $delay, $module}, duration, onComplete) {
      $module.prototype._execute({$elements, $index, $this, $delay, $module}, {
        animation: 'bounce out up',
        duration,
        onComplete
      });
      return ts.fn;
    },
    'fade in': function({$elements, $index, $this, $delay, $module}, duration, onComplete) {
      $module.prototype._execute({$elements, $index, $this, $delay, $module}, {
        animation: 'fade in',
        duration,
        onComplete
      });
      return ts.fn;
    },
    'fade in down': function({$elements, $index, $this, $delay, $module}, duration, onComplete) {
      $module.prototype._execute({$elements, $index, $this, $delay, $module}, {
        animation: 'fade in down',
        duration,
        onComplete
      });
      return ts.fn;
    },
    'fade in down heavily': function({$elements, $index, $this, $delay, $module}, duration, onComplete) {
      $module.prototype._execute({$elements, $index, $this, $delay, $module}, {
        animation: 'fade in down heavily',
        duration,
        onComplete
      });
      return ts.fn;
    },
    'fade in left': function({$elements, $index, $this, $delay, $module}, duration, onComplete) {
      $module.prototype._execute({$elements, $index, $this, $delay, $module}, {
        animation: 'fade in left',
        duration,
        onComplete
      });
      return ts.fn;
    },
    'fade in left heavily': function({$elements, $index, $this, $delay, $module}, duration, onComplete) {
      $module.prototype._execute({$elements, $index, $this, $delay, $module}, {
        animation: 'fade in left heavily',
        duration,
        onComplete
      });
      return ts.fn;
    },
    'fade in right': function({$elements, $index, $this, $delay, $module}, duration, onComplete) {
      $module.prototype._execute({$elements, $index, $this, $delay, $module}, {
        animation: 'fade in right',
        duration,
        onComplete
      });
      return ts.fn;
    },
    'fade in right heavily': function({$elements, $index, $this, $delay, $module}, duration, onComplete) {
      $module.prototype._execute({$elements, $index, $this, $delay, $module}, {
        animation: 'fade in right heavily',
        duration,
        onComplete
      });
      return ts.fn;
    },
    'fade in up': function({$elements, $index, $this, $delay, $module}, duration, onComplete) {
      $module.prototype._execute({$elements, $index, $this, $delay, $module}, {
        animation: 'fade in up',
        duration,
        onComplete
      });
      return ts.fn;
    },
    'fade in up heavily': function({$elements, $index, $this, $delay, $module}, duration, onComplete) {
      $module.prototype._execute({$elements, $index, $this, $delay, $module}, {
        animation: 'fade in up heavily',
        duration,
        onComplete
      });
      return ts.fn;
    },
    'fade out down': function({$elements, $index, $this, $delay, $module}, duration, onComplete) {
      $module.prototype._execute({$elements, $index, $this, $delay, $module}, {
        animation: 'fade out down',
        duration,
        onComplete
      });
      return ts.fn;
    },
    'fade out down heavily': function({$elements, $index, $this, $delay, $module}, duration, onComplete) {
      $module.prototype._execute({$elements, $index, $this, $delay, $module}, {
        animation: 'fade out down heavily',
        duration,
        onComplete
      });
      return ts.fn;
    },
    'fade out left': function({$elements, $index, $this, $delay, $module}, duration, onComplete) {
      $module.prototype._execute({$elements, $index, $this, $delay, $module}, {
        animation: 'fade out left',
        duration,
        onComplete
      });
      return ts.fn;
    },
    'fade out left heavily': function({$elements, $index, $this, $delay, $module}, duration, onComplete) {
      $module.prototype._execute({$elements, $index, $this, $delay, $module}, {
        animation: 'fade out left heavily',
        duration,
        onComplete
      });
      return ts.fn;
    },
    'fade out right': function({$elements, $index, $this, $delay, $module}, duration, onComplete) {
      $module.prototype._execute({$elements, $index, $this, $delay, $module}, {
        animation: 'fade out right',
        duration,
        onComplete
      });
      return ts.fn;
    },
    'fade out right heavily': function({$elements, $index, $this, $delay, $module}, duration, onComplete) {
      $module.prototype._execute({$elements, $index, $this, $delay, $module}, {
        animation: 'fade out right heavily',
        duration,
        onComplete
      });
      return ts.fn;
    },
    'fade out up': function({$elements, $index, $this, $delay, $module}, duration, onComplete) {
      $module.prototype._execute({$elements, $index, $this, $delay, $module}, {
        animation: 'fade out up',
        duration,
        onComplete
      });
      return ts.fn;
    },
    'fade out up heavily': function({$elements, $index, $this, $delay, $module}, duration, onComplete) {
      $module.prototype._execute({$elements, $index, $this, $delay, $module}, {
        animation: 'fade out up heavily',
        duration,
        onComplete
      });
      return ts.fn;
    },
    'flip': function({$elements, $index, $this, $delay, $module}, duration, onComplete) {
      $module.prototype._execute({$elements, $index, $this, $delay, $module}, {
        animation: 'flip',
        duration,
        onComplete
      });
      return ts.fn;
    },
    'flip in x': function({$elements, $index, $this, $delay, $module}, duration, onComplete) {
      $module.prototype._execute({$elements, $index, $this, $delay, $module}, {
        animation: 'flip in x',
        duration,
        onComplete
      });
      return ts.fn;
    },
    'flip in y': function({$elements, $index, $this, $delay, $module}, duration, onComplete) {
      $module.prototype._execute({$elements, $index, $this, $delay, $module}, {
        animation: 'flip in y',
        duration,
        onComplete
      });
      return ts.fn;
    },
    'flip out x': function({$elements, $index, $this, $delay, $module}, duration, onComplete) {
      $module.prototype._execute({$elements, $index, $this, $delay, $module}, {
        animation: 'flip out x',
        duration,
        onComplete
      });
      return ts.fn;
    },
    'flip out y': function({$elements, $index, $this, $delay, $module}, duration, onComplete) {
      $module.prototype._execute({$elements, $index, $this, $delay, $module}, {
        animation: 'flip out y',
        duration,
        onComplete
      });
      return ts.fn;
    },
    'light speed in': function({$elements, $index, $this, $delay, $module}, duration, onComplete) {
      $module.prototype._execute({$elements, $index, $this, $delay, $module}, {
        animation: 'light speed in',
        duration,
        onComplete
      });
      return ts.fn;
    },
    'light speed out': function({$elements, $index, $this, $delay, $module}, duration, onComplete) {
      $module.prototype._execute({$elements, $index, $this, $delay, $module}, {
        animation: 'light speed out',
        duration,
        onComplete
      });
      return ts.fn;
    },
    'rotate in': function({$elements, $index, $this, $delay, $module}, duration, onComplete) {
      $module.prototype._execute({$elements, $index, $this, $delay, $module}, {
        animation: 'rotate in',
        duration,
        onComplete
      });
      return ts.fn;
    },
    'rotate in down left': function({$elements, $index, $this, $delay, $module}, duration, onComplete) {
      $module.prototype._execute({$elements, $index, $this, $delay, $module}, {
        animation: 'rotate in down left',
        duration,
        onComplete
      });
      return ts.fn;
    },
    'rotate in down right': function({$elements, $index, $this, $delay, $module}, duration, onComplete) {
      $module.prototype._execute({$elements, $index, $this, $delay, $module}, {
        animation: 'rotate in down right',
        duration,
        onComplete
      });
      return ts.fn;
    },
    'rotate in up left': function({$elements, $index, $this, $delay, $module}, duration, onComplete) {
      $module.prototype._execute({$elements, $index, $this, $delay, $module}, {
        animation: 'rotate in up left',
        duration,
        onComplete
      });
      return ts.fn;
    },
    'rotate in up right': function({$elements, $index, $this, $delay, $module}, duration, onComplete) {
      $module.prototype._execute({$elements, $index, $this, $delay, $module}, {
        animation: 'rotate in up right',
        duration,
        onComplete
      });
      return ts.fn;
    },
    'rotate out': function({$elements, $index, $this, $delay, $module}, duration, onComplete) {
      $module.prototype._execute({$elements, $index, $this, $delay, $module}, {
        animation: 'rotate out',
        duration,
        onComplete
      });
      return ts.fn;
    },
    'rotate out down left': function({$elements, $index, $this, $delay, $module}, duration, onComplete) {
      $module.prototype._execute({$elements, $index, $this, $delay, $module}, {
        animation: 'rotate out down left',
        duration,
        onComplete
      });
      return ts.fn;
    },
    'rotate out down right': function({$elements, $index, $this, $delay, $module}, duration, onComplete) {
      $module.prototype._execute({$elements, $index, $this, $delay, $module}, {
        animation: 'rotate out down right',
        duration,
        onComplete
      });
      return ts.fn;
    },
    'rotate out up left': function({$elements, $index, $this, $delay, $module}, duration, onComplete) {
      $module.prototype._execute({$elements, $index, $this, $delay, $module}, {
        animation: 'rotate out up left',
        duration,
        onComplete
      });
      return ts.fn;
    },
    'rotate out up right': function({$elements, $index, $this, $delay, $module}, duration, onComplete) {
      $module.prototype._execute({$elements, $index, $this, $delay, $module}, {
        animation: 'rotate out up right',
        duration,
        onComplete
      });
      return ts.fn;
    },
    'hinge': function({$elements, $index, $this, $delay, $module}, duration, onComplete) {
      $module.prototype._execute({$elements, $index, $this, $delay, $module}, {
        animation: 'hinge',
        duration,
        onComplete
      });
      return ts.fn;
    },
    'roll in': function({$elements, $index, $this, $delay, $module}, duration, onComplete) {
      $module.prototype._execute({$elements, $index, $this, $delay, $module}, {
        animation: 'roll in',
        duration,
        onComplete
      });
      return ts.fn;
    },
    'roll out': function({$elements, $index, $this, $delay, $module}, duration, onComplete) {
      $module.prototype._execute({$elements, $index, $this, $delay, $module}, {
        animation: 'roll out',
        duration,
        onComplete
      });
      return ts.fn;
    },
    'zoom in': function({$elements, $index, $this, $delay, $module}, duration, onComplete) {
      $module.prototype._execute({$elements, $index, $this, $delay, $module}, {
        animation: 'zoom in',
        duration,
        onComplete
      });
      return ts.fn;
    },
    'zoom in down': function({$elements, $index, $this, $delay, $module}, duration, onComplete) {
      $module.prototype._execute({$elements, $index, $this, $delay, $module}, {
        animation: 'zoom in down',
        duration,
        onComplete
      });
      return ts.fn;
    },
    'zoom in left': function({$elements, $index, $this, $delay, $module}, duration, onComplete) {
      $module.prototype._execute({$elements, $index, $this, $delay, $module}, {
        animation: 'zoom in left',
        duration,
        onComplete
      });
      return ts.fn;
    },
    'zoom in up': function({$elements, $index, $this, $delay, $module}, duration, onComplete) {
      $module.prototype._execute({$elements, $index, $this, $delay, $module}, {
        animation: 'zoom in up',
        duration,
        onComplete
      });
      return ts.fn;
    },
    'zoom in right': function({$elements, $index, $this, $delay, $module}, duration, onComplete) {
      $module.prototype._execute({$elements, $index, $this, $delay, $module}, {
        animation: 'zoom in right',
        duration,
        onComplete
      });
      return ts.fn;
    },
    'zoom out': function({$elements, $index, $this, $delay, $module}, duration, onComplete) {
      $module.prototype._execute({$elements, $index, $this, $delay, $module}, {
        animation: 'zoom out',
        duration,
        onComplete
      });
      return ts.fn;
    },
    'zoom out down': function({$elements, $index, $this, $delay, $module}, duration, onComplete) {
      $module.prototype._execute({$elements, $index, $this, $delay, $module}, {
        animation: 'zoom out down',
        duration,
        onComplete
      });
      return ts.fn;
    },
    'zoom out left': function({$elements, $index, $this, $delay, $module}, duration, onComplete) {
      $module.prototype._execute({$elements, $index, $this, $delay, $module}, {
        animation: 'zoom out left',
        duration,
        onComplete
      });
      return ts.fn;
    },
    'zoom out right': function({$elements, $index, $this, $delay, $module}, duration, onComplete) {
      $module.prototype._execute({$elements, $index, $this, $delay, $module}, {
        animation: 'zoom out right',
        duration,
        onComplete
      });
      return ts.fn;
    },
    'zoom out up': function({$elements, $index, $this, $delay, $module}, duration, onComplete) {
      $module.prototype._execute({$elements, $index, $this, $delay, $module}, {
        animation: 'zoom out up',
        duration,
        onComplete
      });
      return ts.fn;
    },
    'slide in down': function({$elements, $index, $this, $delay, $module}, duration, onComplete) {
      $module.prototype._execute({$elements, $index, $this, $delay, $module}, {
        animation: 'slide in down',
        duration,
        onComplete
      });
      return ts.fn;
    },
    'slide in left': function({$elements, $index, $this, $delay, $module}, duration, onComplete) {
      $module.prototype._execute({$elements, $index, $this, $delay, $module}, {
        animation: 'slide in left',
        duration,
        onComplete
      });
      return ts.fn;
    },
    'slide in right': function({$elements, $index, $this, $delay, $module}, duration, onComplete) {
      $module.prototype._execute({$elements, $index, $this, $delay, $module}, {
        animation: 'slide in right',
        duration,
        onComplete
      });
      return ts.fn;
    },
    'slide in up': function({$elements, $index, $this, $delay, $module}, duration, onComplete) {
      $module.prototype._execute({$elements, $index, $this, $delay, $module}, {
        animation: 'slide in up',
        duration,
        onComplete
      });
      return ts.fn;
    },
    'slide out down': function({$elements, $index, $this, $delay, $module}, duration, onComplete) {
      $module.prototype._execute({$elements, $index, $this, $delay, $module}, {
        animation: 'slide out down',
        duration,
        onComplete
      });
      return ts.fn;
    },
    'slide out left': function({$elements, $index, $this, $delay, $module}, duration, onComplete) {
      $module.prototype._execute({$elements, $index, $this, $delay, $module}, {
        animation: 'slide out left',
        duration,
        onComplete
      });
      return ts.fn;
    },
    'slide out right': function({$elements, $index, $this, $delay, $module}, duration, onComplete) {
      $module.prototype._execute({$elements, $index, $this, $delay, $module}, {
        animation: 'slide out right',
        duration,
        onComplete
      });
      return ts.fn;
    },
    'slide out up': function({$elements, $index, $this, $delay, $module}, duration, onComplete) {
      $module.prototype._execute({$elements, $index, $this, $delay, $module}, {
        animation: 'slide out up',
        duration,
        onComplete
      });
      return ts.fn;
    },
    'toggle': function({$elements, $index, $this, $delay, $module}, duration, onComplete) {
      $module.prototype._execute({$elements, $index, $this, $delay, $module}, {
        animation: 'toggle',
        duration,
        onComplete
      });
      return ts.fn;
    },
    'show': function({$elements, $index, $this, $delay, $module}, duration, onComplete) {
      $module.prototype._execute({$elements, $index, $this, $delay, $module}, {
        animation: 'show',
        duration,
        onComplete
      });
      return ts.fn;
    },
    'hide': function({$elements, $index, $this, $delay, $module}, duration, onComplete) {
      $module.prototype._execute({$elements, $index, $this, $delay, $module}, {
        animation: 'hide',
        duration,
        onComplete
      });
      return ts.fn;
    },
    'delay': function({$elements, $index, $this, $delay, $module}, duration, onComplete) {
      $module.prototype._execute({$elements, $index, $this, $delay, $module}, {
        animation: 'delay',
        duration,
        onComplete
      });
      return ts.fn;
    },
    'set looping': function({$this, $delay, $module}, options) {
      $this.data('animationLooping', true);
      return ts.fn;
    },
    'remove looping': function({$this, $delay, $module}, options) {
      $this.removeData('animationLooping');
      return ts.fn;
    },
    'stop': function() {},
    'stop all': function() {}
  };

  return TocasTransition;

})();

new ts(TocasTransition);
