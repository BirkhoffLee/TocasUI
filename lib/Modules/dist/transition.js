// Generated by CoffeeScript 2.0.0-beta4
var TocasTransition;

TocasTransition = (function() {
  class TocasTransition {
    _init({$this}) {
      // 初始化動畫佇列。
      $this.data('animationQueue', []);
      // 初始化動畫索引。
      return $this.data('animationIndex', 0);
    }

    // 播放動畫。
    async _animate({$this, $delay, $module}, {animation, duration, onComplete, group, interval}) {
      var index, looping, queue;
      // 設置動畫時間。
      $this.css('animation-duration', `${duration}ms`);
      // 設置動畫名稱。
      $this.attr('data-animation', animation);
      await $delay();
      // 執行動畫。
      $this.attr('data-animating', true);
      // 過了動畫的執行時間（相當於動畫執行完畢），我們才繼續。
      await $delay(duration);
      // 移除動畫效果樣式。
      $this.removeAttr('data-animating');
      // 呼叫完成函式。
      onComplete.call($this.get());
      //if group isnt undefined
      //    return

      // 取得動畫佇列。
      queue = $this.data('animationQueue');
      // 取得目前播放的索引。
      index = $this.data('animationIndex');
      // 確認是否為無限重複的動畫。
      looping = $this.data('animationLooping');
      index++;
      // 如果沒有下一個動畫了，就表示這是最後一個。
      // 我們就把動畫佇列清空。
      if (queue[index] === void 0) {
        index = 0;
        $this.removeAttr('data-animation').removeAttr('data-animating').css('animation-duration', '').data('animationIndex', index);
        // 如果不需要重複的話，就將佇列清空。
        if (!looping) {
          queue = [];
          $this.data('animationQueue', queue);
          return;
        }
      }
      // 設置新的索引。
      $this.data('animationIndex', index);
      // 執行下一個動畫。
      return $module.prototype._animate({$this, $delay, $module}, queue[index]);
    }

    // 將新的動畫推入佇列中，如果佇列裡只有這個動畫就立即執行。
    _push({$this, $delay, $module}, animation, duration, onComplete) {
      var data, queue;
      // 如果元素還沒初始化的話，就先初始化。
      if ($this.data('animationQueue') === void 0) {
        $module.prototype._init({$this});
      }
      // 準備好本次的動畫資料。
      if (typeof duration === 'function') {
        onComplete = duration;
        duration = 800;
      }
      if (duration === null) {
        duration = 800;
      }
      if (onComplete === null || onComplete === void 0) {
        onComplete = function() {};
      }
      data = {animation, duration, onComplete};
      // 將本次動畫資料擺入至佇列中。
      queue = $this.data('animationQueue');
      queue.push(data);
      // 如果佇列裡只有一個動畫，那麼就是剛才所新增的，直接開始執行。
      if (queue.length === 1) {
        return $module.prototype._animate({$this, $delay, $module}, data);
      }
    }

    $opts({$elements, $index, $this, $delay, $module}, options) {
      var $self, element, elements, fn, i, index, len;
      if ($index !== 0 && (options.reverse != null) && options.reverse === true) {
        return ts.fn;
      }
      options = Object.assign({
        animation: '',
        duration: null,
        interval: 100,
        reverse: false,
        group: false,
        onComplete: function() {},
        onAllComplete: function() {}
      }, options);
      if (options.reverse === true) {
        elements = $elements.toArray().reverse();
        fn = async function($self) {
          await $delay(options.interval * index);
          return $module.prototype._push({
            $this: $self,
            $delay,
            $module
          }, options.animation, options.duration, options.onComplete);
        };
        for (index = i = 0, len = elements.length; i < len; index = ++i) {
          element = elements[index];
          $self = $selector(element);
          fn($self);
        }
      } else {
        (async function() {
          await $delay(options.interval * $index);
          return $module.prototype._push({$this, $delay, $module}, options.animation, options.duration, options.onComplete);
        })();
      }
      return ts.fn;
    }

  };

  TocasTransition.prototype.$name = 'transition';

  TocasTransition.prototype.$methods = {
    'bounce': function({$this, $delay, $module}, duration, onComplete) {
      $module.prototype._push({$this, $delay, $module}, 'bounce', duration, onComplete);
      return ts.fn;
    },
    'flash': function({$this, $delay, $module}, duration, onComplete) {
      $module.prototype._push({$this, $delay, $module}, 'flash', duration, onComplete);
      return ts.fn;
    },
    'pulse': function({$this, $delay, $module}, duration, onComplete) {
      $module.prototype._push({$this, $delay, $module}, 'pulse', duration, onComplete);
      return ts.fn;
    },
    'rubber band': function({$this, $delay, $module}, duration, onComplete) {
      $module.prototype._push({$this, $delay, $module}, 'rubber band', duration, onComplete);
      return ts.fn;
    },
    'shake': function({$this, $delay, $module}, duration, onComplete) {
      $module.prototype._push({$this, $delay, $module}, 'shake', duration, onComplete);
      return ts.fn;
    },
    'head shake': function({$this, $delay, $module}, duration, onComplete) {
      $module.prototype._push({$this, $delay, $module}, 'head shake', duration, onComplete);
      return ts.fn;
    },
    'swing': function({$this, $delay, $module}, duration, onComplete) {
      $module.prototype._push({$this, $delay, $module}, 'swing', duration, onComplete);
      return ts.fn;
    },
    'tada': function({$this, $delay, $module}, duration, onComplete) {
      $module.prototype._push({$this, $delay, $module}, 'tada', duration, onComplete);
      return ts.fn;
    },
    'wobble': function({$this, $delay, $module}, duration, onComplete) {
      $module.prototype._push({$this, $delay, $module}, 'wobble', duration, onComplete);
      return ts.fn;
    },
    'jello': function({$this, $delay, $module}, duration, onComplete) {
      $module.prototype._push({$this, $delay, $module}, 'jello', duration, onComplete);
      return ts.fn;
    },
    'bounce in': function({$this, $delay, $module}, duration, onComplete) {
      $module.prototype._push({$this, $delay, $module}, 'bounce in', duration, onComplete);
      return ts.fn;
    },
    'bounce in down': function({$this, $delay, $module}, duration, onComplete) {
      $module.prototype._push({$this, $delay, $module}, 'bounce in down', duration, onComplete);
      return ts.fn;
    },
    'bounce in left': function({$this, $delay, $module}, duration, onComplete) {
      $module.prototype._push({$this, $delay, $module}, 'bounce in left', duration, onComplete);
      return ts.fn;
    },
    'bounce in right': function({$this, $delay, $module}, duration, onComplete) {
      $module.prototype._push({$this, $delay, $module}, 'bounce in right', duration, onComplete);
      return ts.fn;
    },
    'bounce in up': function({$this, $delay, $module}, duration, onComplete) {
      $module.prototype._push({$this, $delay, $module}, 'bounce in up', duration, onComplete);
      return ts.fn;
    },
    'bounce out': function({$this, $delay, $module}, duration, onComplete) {
      $module.prototype._push({$this, $delay, $module}, 'bounce out', duration, onComplete);
      return ts.fn;
    },
    'bounce down': function({$this, $delay, $module}, duration, onComplete) {
      $module.prototype._push({$this, $delay, $module}, 'bounce down', duration, onComplete);
      return ts.fn;
    },
    'bounce out left': function({$this, $delay, $module}, duration, onComplete) {
      $module.prototype._push({$this, $delay, $module}, 'bounce out left', duration, onComplete);
      return ts.fn;
    },
    'bounce out right': function({$this, $delay, $module}, duration, onComplete) {
      $module.prototype._push({$this, $delay, $module}, 'bounce out right', duration, onComplete);
      return ts.fn;
    },
    'bounce out up': function({$this, $delay, $module}, duration, onComplete) {
      $module.prototype._push({$this, $delay, $module}, 'bounce out up', duration, onComplete);
      return ts.fn;
    },
    'fade in': function({$this, $delay, $module}, duration, onComplete) {
      $module.prototype._push({$this, $delay, $module}, 'fade in', duration, onComplete);
      return ts.fn;
    },
    'fade in down': function({$this, $delay, $module}, duration, onComplete) {
      $module.prototype._push({$this, $delay, $module}, 'fade in down', duration, onComplete);
      return ts.fn;
    },
    'fade in down heavily': function({$this, $delay, $module}, duration, onComplete) {
      $module.prototype._push({$this, $delay, $module}, 'fade in down heavily', duration, onComplete);
      return ts.fn;
    },
    'fade in left': function({$this, $delay, $module}, duration, onComplete) {
      $module.prototype._push({$this, $delay, $module}, 'fade in left', duration, onComplete);
      return ts.fn;
    },
    'fade in left heavily': function({$this, $delay, $module}, duration, onComplete) {
      $module.prototype._push({$this, $delay, $module}, 'fade in left heavily', duration, onComplete);
      return ts.fn;
    },
    'fade in right': function({$this, $delay, $module}, duration, onComplete) {
      $module.prototype._push({$this, $delay, $module}, 'fade in right', duration, onComplete);
      return ts.fn;
    },
    'fade in right heavily': function({$this, $delay, $module}, duration, onComplete) {
      $module.prototype._push({$this, $delay, $module}, 'fade in right heavily', duration, onComplete);
      return ts.fn;
    },
    'fade in up': function({$this, $delay, $module}, duration, onComplete) {
      $module.prototype._push({$this, $delay, $module}, 'fade in up', duration, onComplete);
      return ts.fn;
    },
    'fade in up heavily': function({$this, $delay, $module}, duration, onComplete) {
      $module.prototype._push({$this, $delay, $module}, 'fade in up heavily', duration, onComplete);
      return ts.fn;
    },
    'fade out down': function({$this, $delay, $module}, duration, onComplete) {
      $module.prototype._push({$this, $delay, $module}, 'fade out down', duration, onComplete);
      return ts.fn;
    },
    'fade out down heavily': function({$this, $delay, $module}, duration, onComplete) {
      $module.prototype._push({$this, $delay, $module}, 'fade out down heavily', duration, onComplete);
      return ts.fn;
    },
    'fade out left': function({$this, $delay, $module}, duration, onComplete) {
      $module.prototype._push({$this, $delay, $module}, 'fade out left', duration, onComplete);
      return ts.fn;
    },
    'fade out left heavily': function({$this, $delay, $module}, duration, onComplete) {
      $module.prototype._push({$this, $delay, $module}, 'fade out left heavily', duration, onComplete);
      return ts.fn;
    },
    'fade out right': function({$this, $delay, $module}, duration, onComplete) {
      $module.prototype._push({$this, $delay, $module}, 'fade out right', duration, onComplete);
      return ts.fn;
    },
    'fade out right heavily': function({$this, $delay, $module}, duration, onComplete) {
      $module.prototype._push({$this, $delay, $module}, 'fade out right heavily', duration, onComplete);
      return ts.fn;
    },
    'fade out up': function({$this, $delay, $module}, duration, onComplete) {
      $module.prototype._push({$this, $delay, $module}, 'fade out up', duration, onComplete);
      return ts.fn;
    },
    'fade out up heavily': function({$this, $delay, $module}, duration, onComplete) {
      $module.prototype._push({$this, $delay, $module}, 'fade out up heavily', duration, onComplete);
      return ts.fn;
    },
    'flip': function({$this, $delay, $module}, duration, onComplete) {
      $module.prototype._push({$this, $delay, $module}, 'flip', duration, onComplete);
      return ts.fn;
    },
    'flip in x': function({$this, $delay, $module}, duration, onComplete) {
      $module.prototype._push({$this, $delay, $module}, 'flip in x', duration, onComplete);
      return ts.fn;
    },
    'flip in y': function({$this, $delay, $module}, duration, onComplete) {
      $module.prototype._push({$this, $delay, $module}, 'flip in y', duration, onComplete);
      return ts.fn;
    },
    'flip out x': function({$this, $delay, $module}, duration, onComplete) {
      $module.prototype._push({$this, $delay, $module}, 'flip out x', duration, onComplete);
      return ts.fn;
    },
    'flip out y': function({$this, $delay, $module}, duration, onComplete) {
      $module.prototype._push({$this, $delay, $module}, 'flip out y', duration, onComplete);
      return ts.fn;
    },
    'light speed in': function({$this, $delay, $module}, duration, onComplete) {
      $module.prototype._push({$this, $delay, $module}, 'light speed in', duration, onComplete);
      return ts.fn;
    },
    'light speed out': function({$this, $delay, $module}, duration, onComplete) {
      $module.prototype._push({$this, $delay, $module}, 'light speed out', duration, onComplete);
      return ts.fn;
    },
    'rotate in': function({$this, $delay, $module}, duration, onComplete) {
      $module.prototype._push({$this, $delay, $module}, 'rotate in', duration, onComplete);
      return ts.fn;
    },
    'rotate in down left': function({$this, $delay, $module}, duration, onComplete) {
      $module.prototype._push({$this, $delay, $module}, 'rotate in down left', duration, onComplete);
      return ts.fn;
    },
    'rotate in down right': function({$this, $delay, $module}, duration, onComplete) {
      $module.prototype._push({$this, $delay, $module}, 'rotate in down right', duration, onComplete);
      return ts.fn;
    },
    'rotate in up left': function({$this, $delay, $module}, duration, onComplete) {
      $module.prototype._push({$this, $delay, $module}, 'rotate in up left', duration, onComplete);
      return ts.fn;
    },
    'rotate in up right': function({$this, $delay, $module}, duration, onComplete) {
      $module.prototype._push({$this, $delay, $module}, 'rotate in up right', duration, onComplete);
      return ts.fn;
    },
    'rotate out': function({$this, $delay, $module}, duration, onComplete) {
      $module.prototype._push({$this, $delay, $module}, 'rotate out', duration, onComplete);
      return ts.fn;
    },
    'rotate out down left': function({$this, $delay, $module}, duration, onComplete) {
      $module.prototype._push({$this, $delay, $module}, 'rotate out down left', duration, onComplete);
      return ts.fn;
    },
    'rotate out down right': function({$this, $delay, $module}, duration, onComplete) {
      $module.prototype._push({$this, $delay, $module}, 'rotate out down right', duration, onComplete);
      return ts.fn;
    },
    'rotate out up left': function({$this, $delay, $module}, duration, onComplete) {
      $module.prototype._push({$this, $delay, $module}, 'rotate out up left', duration, onComplete);
      return ts.fn;
    },
    'rotate out up right': function({$this, $delay, $module}, duration, onComplete) {
      $module.prototype._push({$this, $delay, $module}, 'rotate out up right', duration, onComplete);
      return ts.fn;
    },
    'hinge': function({$this, $delay, $module}, duration, onComplete) {
      $module.prototype._push({$this, $delay, $module}, 'hinge', duration, onComplete);
      return ts.fn;
    },
    'roll in': function({$this, $delay, $module}, duration, onComplete) {
      $module.prototype._push({$this, $delay, $module}, 'roll in', duration, onComplete);
      return ts.fn;
    },
    'roll out': function({$this, $delay, $module}, duration, onComplete) {
      $module.prototype._push({$this, $delay, $module}, 'roll out', duration, onComplete);
      return ts.fn;
    },
    'zoom in': function({$this, $delay, $module}, duration, onComplete) {
      $module.prototype._push({$this, $delay, $module}, 'zoom in', duration, onComplete);
      return ts.fn;
    },
    'zoom in down': function({$this, $delay, $module}, duration, onComplete) {
      $module.prototype._push({$this, $delay, $module}, 'zoom in down', duration, onComplete);
      return ts.fn;
    },
    'zoom in left': function({$this, $delay, $module}, duration, onComplete) {
      $module.prototype._push({$this, $delay, $module}, 'zoom in left', duration, onComplete);
      return ts.fn;
    },
    'zoom in up': function({$this, $delay, $module}, duration, onComplete) {
      $module.prototype._push({$this, $delay, $module}, 'zoom in up', duration, onComplete);
      return ts.fn;
    },
    'zoom in right': function({$this, $delay, $module}, duration, onComplete) {
      $module.prototype._push({$this, $delay, $module}, 'zoom in right', duration, onComplete);
      return ts.fn;
    },
    'zoom out': function({$this, $delay, $module}, duration, onComplete) {
      $module.prototype._push({$this, $delay, $module}, 'zoom out', duration, onComplete);
      return ts.fn;
    },
    'zoom out down': function({$this, $delay, $module}, duration, onComplete) {
      $module.prototype._push({$this, $delay, $module}, 'zoom out down', duration, onComplete);
      return ts.fn;
    },
    'zoom out left': function({$this, $delay, $module}, duration, onComplete) {
      $module.prototype._push({$this, $delay, $module}, 'zoom out left', duration, onComplete);
      return ts.fn;
    },
    'zoom out right': function({$this, $delay, $module}, duration, onComplete) {
      $module.prototype._push({$this, $delay, $module}, 'zoom out right', duration, onComplete);
      return ts.fn;
    },
    'zoom out up': function({$this, $delay, $module}, duration, onComplete) {
      $module.prototype._push({$this, $delay, $module}, 'zoom out up', duration, onComplete);
      return ts.fn;
    },
    'slide in down': function({$this, $delay, $module}, duration, onComplete) {
      $module.prototype._push({$this, $delay, $module}, 'slide in down', duration, onComplete);
      return ts.fn;
    },
    'slide in left': function({$this, $delay, $module}, duration, onComplete) {
      $module.prototype._push({$this, $delay, $module}, 'slide in left', duration, onComplete);
      return ts.fn;
    },
    'slide in right': function({$this, $delay, $module}, duration, onComplete) {
      $module.prototype._push({$this, $delay, $module}, 'slide in right', duration, onComplete);
      return ts.fn;
    },
    'slide in up': function({$this, $delay, $module}, duration, onComplete) {
      $module.prototype._push({$this, $delay, $module}, 'slide in up', duration, onComplete);
      return ts.fn;
    },
    'slide out down': function({$this, $delay, $module}, duration, onComplete) {
      $module.prototype._push({$this, $delay, $module}, 'slide out down', duration, onComplete);
      return ts.fn;
    },
    'slide out left': function({$this, $delay, $module}, duration, onComplete) {
      $module.prototype._push({$this, $delay, $module}, 'slide out left', duration, onComplete);
      return ts.fn;
    },
    'slide out right': function({$this, $delay, $module}, duration, onComplete) {
      $module.prototype._push({$this, $delay, $module}, 'slide out right', duration, onComplete);
      return ts.fn;
    },
    'slide out up': function({$this, $delay, $module}, duration, onComplete) {
      $module.prototype._push({$this, $delay, $module}, 'slide out up', duration, onComplete);
      return ts.fn;
    },
    'toggle': function() {},
    'show': function({$this, $delay, $module}, duration, onComplete) {
      $module.prototype._push({$this, $delay, $module}, 'show', duration, onComplete);
      return ts.fn;
    },
    'hide': function({$this, $delay, $module}, duration, onComplete) {
      $module.prototype._push({$this, $delay, $module}, 'hide', duration, onComplete);
      return ts.fn;
    },
    'delay': function() {},
    'set looping': function({$this, $delay, $module}, options) {
      $this.data('animationLooping', true);
      return ts.fn;
    },
    'remove looping': function({$this, $delay, $module}, options) {
      $this.data({
        'animationLooping': false,
        'animationIndex': 0
      });
      return ts.fn;
    },
    'stop': function() {},
    'stop all': function() {}
  };

  return TocasTransition;

})();

new ts(TocasTransition);
